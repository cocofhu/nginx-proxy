stages:
  - build

variables:
  DOCKER_REGISTRY: registry.service.arpa:443
  TENCENT_REGISTRY: ccr.ccs.tencentyun.com
  PROJECT_NAME: nginx-proxy

docker-build:
  image: docker:cli
  stage: build
  services:
    - name: docker:dind
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh", "--insecure-registry=registry.service.arpa:443"]
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
  before_script:
    - 'if [[ -n "$CI_COMMIT_TAG" ]]; then export VERSION="$CI_COMMIT_TAG"; else export VERSION="v1.0.0-${CI_COMMIT_SHORT_SHA}"; fi'
    - echo "Building version: $VERSION"
    - export DOCKER_IMAGE_VERSIONED="$DOCKER_REGISTRY/$PROJECT_NAME:$VERSION"
    - export DOCKER_IMAGE_LATEST="$DOCKER_REGISTRY/$PROJECT_NAME:latest"
    - export DOCKER_IMAGE_TENCENT_VERSIONED="$TENCENT_REGISTRY/cocofhu/$PROJECT_NAME:$VERSION"
    - export DOCKER_IMAGE_TENCENT_LATEST="$TENCENT_REGISTRY/cocofhu/$PROJECT_NAME:latest"
  script:
    - echo "Building Docker images..."
    - echo "Versioned image: $DOCKER_IMAGE_VERSIONED"
    - echo "Latest image: $DOCKER_IMAGE_LATEST"
    - docker build --pull -t "$DOCKER_IMAGE_VERSIONED" .
    - docker push "$DOCKER_IMAGE_VERSIONED"
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile
    - if: $CI_COMMIT_TAG
      exists:
        - Dockerfile